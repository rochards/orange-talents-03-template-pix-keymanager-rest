syntax = "proto3";

option java_multiple_files = true;
option java_package = "br.com.zupacademy.keymanagergrpc.grpc";
option java_outer_classname = "KeyManagerServiceOuterClass";
//option objc_class_prefix = "HLW";

package br.com.zupacademy.keymanagergrpc.grpc;

import "google/protobuf/timestamp.proto";

enum TipoChave {
  UNKNOWN_CHAVE = 0;
  RANDOM = 1;
  CPF = 2;
  TELEFONE_CELULAR = 3;
  EMAIL = 4;
}
enum TipoConta {
  UNKNOWN_CONTA = 0;
  CONTA_CORRENTE = 1;
  CONTA_POUPANCA = 2;
}

message RegistraChavePixRequest {
  string erpClienteId = 1;
  string chave = 2;
  TipoChave tipoChave = 3;
  TipoConta tipoConta = 4;
}
message RegistraChavePixResponse {
  int64 id = 1;
}

// renomear o serviço abaixo, pois está muito generalista
service KeyManagerRegistraService {
  rpc registraChavePix(RegistraChavePixRequest) returns (RegistraChavePixResponse) {}
}


message RemoveChavePixRequest {
  int64 chaveId = 1;
  string erpClienteId = 2;
}
message RemoveChavePixResponse {
  string erpClienteId = 1;
  string chave = 2;
}
/* resolvi separar em diferentes serviços pq o gRPC começa a se perder nos serviços, ficava lançando erro de
UNIMPLEMENTED Method*/
service KeyManagerRemoveService {
  rpc removeChavePix(RemoveChavePixRequest) returns (RemoveChavePixResponse) {}
}


message ConsultaChavePixRequest {
  ChavePix chavePix = 1;
  string chave = 2;

  message ChavePix {
    int64 id = 1;
    string erpClienteId = 2;
  }
}
message ConsultaChavePixResponse {
  string chaveId = 1;
  string erpClienteId = 2;
  TipoChave tipoChave = 3;
  string chave = 4;
  Titular titular = 5;
  Conta conta = 6;
  google.protobuf.Timestamp criadaEm = 7;

  message Titular {
    string nome = 1;
    string cpf = 2;
  }
  message Conta {
    string nomeInstituicao = 1;
    string agencia = 2;
    string numero = 3;
    TipoConta tipoConta = 4;
  }
}
service KeyManagerConsultaService {
  rpc consultaChavePix(ConsultaChavePixRequest) returns (ConsultaChavePixResponse) {}
}


message ListaChavesPixRequest {
  string erpClienteId = 1;
}
message ListaChavesPixResponse {
  string erpClienteId = 1;
  repeated ChavePixResponse chaves = 2;

  message ChavePixResponse {
    int64 pixId = 1;
    string chave = 2;
    TipoChave tipoChave = 3;
    TipoConta tipoConta = 4;
    google.protobuf.Timestamp criadaEm = 5;
  }
}
service KeyManagerListaService {
  rpc listaChavesPix(ListaChavesPixRequest) returns (ListaChavesPixResponse) {}
}